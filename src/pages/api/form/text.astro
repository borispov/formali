---
import FormBtnContainer from '../../../components/FormBtnContainer.astro';
import ErrorNotification from '../../../components/alpine/ErrorNotification.astro'

import { z } from 'astro:content'

let renderError = false;

const emailSchema = z.string().email()
if (Astro.request.method === 'POST') {
  if (Astro.request.headers.has('x-up-validate')) {
    const fd = await Astro.request.formData()
    const emailInput = fd.get('email')
    try {
      emailSchema.parse(emailInput)
      return new Response(`
        <div class="error hidden"></div>
      `)
    } catch(err) {
      renderError = true
    }
  }
}
---

{renderError 
  && <ErrorNotification msg={`אנא הזן/י אימייל תקין`} />
  || <fieldset>
      <label x-text="field.question" class="text-lg sm:text-xl xl:text-3xl font-medium text-gray-700 leading-[1.35em] lg:leading-normal">
        <sup x-show="{field.required}" class="text-red-600"> * </sup>
      </label>

      <p 
        x-text="field.description" 
        class="text-lg font-normal leading-relaxed text-neutral-600" />

      <input
        :id="$id('input')"
        :name="$id('input')"
        :type="field.type"
        @keyup="handleErr"
        @submit.prevent=""
        :placeholder="field.placeholder"
        :required="field.required"
        class={`transition-all bg-transparent border-b-2 border-b-neutral-600 text-gray-800 mt-8 pb-2 question-input__text placeholder:italic placeholder:text-neutral-500 placeholder:text-xl lg:placeholder:text-3xl focus:border-b-neutral-100 outline-0`}
        />
        <div class="error hidden mt-2 p-1 text-red-600 bg-yellow-200" />
      <FormBtnContainer text="המשך" />
    </fieldset>
}

<style>
  .question-input__text {
    font-size: 2rem;
    width: 100%;
  }

  @media screen and (max-width: 599px) {
    .question-input__text {
      font-size: 2.9rem;
      margin-top: 32px;
    }
  }
</style>
