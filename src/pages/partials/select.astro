---
export const partial = true;
const { field } = Astro.props
const { error, question, description, type, placeholder, required, options } = field
---

<fieldset>
  <div x-text="field.question" class="text-lg sm:text-xl xl:text-3xl font-medium text-gray-700 leading-[1.35em] lg:leading-normal">
    {question}
    <sup x-show="{field.required}" class="text-red-600"> * </sup>
  </div>
  <p 
    x-text="field.description" 
    class="text-lg font-normal leading-relaxed text-neutral-600" 
  />

    <div x-data="{ checked: ''}" class="flex flex-col gap-2">
    <template class="mt-6" x-for="option in field.options">

      <div class="mt-6 inline-block">
      <label 
        x-data="{
          isChecked: false,
          value: option,
          id: $id('input'),
          init() {
            console.log('initialized')
            this.$watch('checked', v => {
              console.log('checked', v);
              this.isChecked = v === this.value
            })
          }
        }"
        :for="id"
        class="relative flex cursor-pointer rounded-lg border bg-white p-2 shadow-sm focus:outline-none border-indigo-200 ring-2 border-transparent transition duration-75 ease-in-out" x-transition
        :class="isChecked ? 'border-neutral-600 ring-indigo-500' : ''"
      >
        <input
          x-model="checked"
          :text="option"
          :id="id"
          :name="id"
          required="field.required"
          type="radio"
          class="sr-only" 
          @click="checked = option"
          />
          <span class="flex flex-1" x-text="option" />

            <svg 
              :class="isChecked ? '' : 'invisible'" 
              class="h-5 w-5 text-indigo-600"  
              xmlns="http://www.w3.org/2000/svg" 
              viewBox="0 0 20 20" 
              fill="currentColor" 
              aria-hidden="true">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z" clip-rule="evenodd" />
          </svg>
        </label>
      </div>
    </template>
      <div class="error hidden" />
    </div>
  </div>

  <button type="submit" hx-post="/form">
    המשך
  </button>
</fieldset>

<script is:inline define:vars={{ field: field }} >
  document.addEventListener('alpine:init', () => {
    Alpine.data('data', () => ({
      form: field,
    }))
  })
</script>
